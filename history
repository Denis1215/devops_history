ansible ! -name "inventory*.yml" -name "*.yml" -type f -print0 | xargs -0 -n1 ansible-playbook --syntax-check
ansible -a ping localhost
ansible all -i inventory.json -m ping
ansible all -i inventory.yml -m command -a uptime
ansible app -i inventory -m command -a uptime
ansible app -i inventory.yml -m command -a 'bundler -v'
ansible app -i inventory.yml -m shell  -a 'ruby -v; bundler -v'
ansible app -m command -a 'rm -rf ~/reddit'
ansible app -m git -a 'repo=https://github.com/express42/reddit.git dest=/home/appuser/reddit'
ansible appserver -i inventory -m ping
ansible appserver -i inventory.yml -m command -a uptime
ansible -C -i inventory site.yml
ansible db -i inventory.yml -m shell  -a 'systemctl status mongod'
ansible db -m service -a name=mongod
ansible dbserver -i inventory -m command -a uptime
ansible dbserver -i inventory -m ping
ansible -i inventory -m 'free -m'
ansible -m localhost
ansible -m ping
ansible servers -i inventory -m  "free -m"
ansible servers -i inventory -m raw "free -m" --private-key=.ssh/id_rsa -u root

ansible-galaxy -h
ansible-galaxy init
ansible-galaxy init app
ansible-galaxy install -r environments/stage/requirements.yml

ansible-lint
ansible-lint roles/db/tasks/config_mongo.yml
ansible-lint roles/db/tasks/main.yml

ansible-playbook
ansible-playbook  -i inventory.yml --syntax-check  site.yml
ansible-playbook  site.yml
ansible-playbook  --syntax-check  site.yml
ansible-playbook -C -i inventory.yml site.yml
ansible-playbook -C reddit_app.yml -L app -t pp-tag
ansible-playbook -C reddit_app.yml --limit app -t pp-tag
ansible-playbook -D clone.yml
ansible-playbook -D reddit_app.yml --limit app --tags app-tag
ansible-playbook -i environments/stage/inventory playbooks/site.yml --vault-password-file=~/.ansible/vault.key
ansible-playbook -i inventory -m ping
ansible-playbook -i inventory --private-key=.ssh/id_rsa -u gitlab deploy.yml -v
ansible-playbook reddit_app.yml --check --limit app --tags deploy-tag
ansible-playbook reddit_app.yml -D --limit app --tags deploy-tag

ansible-vault edit environments/prod/credentials.yml
ansible-vault edit environments/prod/credentials.yml --vaul_file=~/.ansible/vault.key

cfssl gencert \  -ca=ca.pem \  -ca-key=ca-key.pem \  -config=ca-config.json \  -profile=kubernetes \  admin-csr.json | cfssljson -bare admin
cfssl gencert -initca ca-csr.json | cfssljson -bare ca
cfssl info
cfssl --version
cfssljson --version

docer exec -it bb387d0746f9 bash
docker build -t $USER_NAME/fluentd .
docker build -t ozyab/comment:1.0 ./comment
docker build -t ozyab/ui:2.1 ./ui/Dockerfile.1
docker build -t reddit:latest .
docker commit a47012494398 ozyab09/ubuntu-tmp-file
docker container inspect a47012494398
docker container ls
docker diff reddit
docker exec -it 2a9 /bin/sh
docker exec -it bb387d0746f9 bash
docker exec -it ozyab/ui:2.1 /bin/sh
docker image -f rm ozyab09/ubuntu-tmp-file hello-world ubuntu nginx tehbilly/htop consol/centos-xfce-vnc
docker image rm ozyab09/ubuntu-tmp-file hello-world ubuntu nginx tehbilly/htop consol/centos-xfce-vnc
docker info
docker inspect ozyab/otus-reddit:1.0
docker inspect ozyab/otus-reddit:1.0  -f '{{.ContainerConfig.Cmd}}'
docker kill $(docker ps -q)

docker log 492
docker log -f dockermicroservices_elasticsearch_1
docker logout
docker logs -f  f6f
docker logs -f 75e2def22450
docker network create back_net --subnet=10.0.2.0/24docker network create front_net --subnet=10.0.1.0/24
docker network create reddit
docker ps -a --format "table {{.ID}}\t{{.Image}}\t{{.CreatedAt}}\t{{.Names}}"
docker pull ozyab/prometheus:latest
docker pull ubuntu-16.04
docker push $USER_NAME/ui:1.0
docker push ozyab/comment
docker run -d  nginx
docker run -d --network=front_net -p 9292:9292 --name ui ozyab/ui:1.0docker run -d --network=back_net --name comment ozyab/comment:1.0docker run -d --network=back_net --name post ozyab/post:1.0docker run -d --network=back_net --name mongo_db  --network-alias=post_db --network-alias=comment_db mongo:latest 
docker run -it ozyab/ui:2.1
docker run --name reddit -d --network=host reddit:latest
docker run -ti --rm --network none joffotron/docker-net-tools /bin/sh
docker run -ti --rm --network none joffotron/docker-net-tools -c /bin/sh
docker stop prometheus
docker system df
docker teg ozyab/prometheus:1.0 ozyab/prometheus:latest
docker version
docker volume create reddit_db
docker volume ls

docker-compose
docker-compose -d -f docker-compose-monitoring.yml
docker-compose -d up
docker-compose down -ddocker-compose -f docker-compose-monitoring.yml down
docker-compose down
docker-compose -f docker-compose-logging.yml down
docker-compose -f docker-compose-logging.yml down -d fluentd
docker-compose -f docker-compose-logging.yml start elasticsearch
docker-compose logs -f kibana
docker-compose logs -f post
docker-compose start post
docker-compose stop post
docker-machine create --driver google \
  --google-machine-image https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts \
  --google-machine-type n1-standard-1 \
  --google-zone europe-west1-b \
  docker-host
docker-machine env docker-host
docker-machine regenerate-certs docker-host
docker-machine rm docker-host
docker-machine ssh docker-host
docker-machine ssh docker-host ifconfig


find ansible ! -name "inventory*.yml" -name "*.yml" -type f -print0 | xargs -0 -n1 ansible-playbook --syntax-check
for i in {coment post reddit ui} do; mkdir ${i} done
for i in {coment post reddit ui} do; mkdir $i done
for i in 0 1 2; do  gcloud compute instances create controller-${i} \
    --async \
    --boot-disk-size 200GB \
    --can-ip-forward \
    --image-family ubuntu-1804-lts \
    --image-project ubuntu-os-cloud \
    --machine-type n1-standard-1 \
    --private-network-ip 10.240.0.1${i} \
    --scopes compute-rw,storage-ro,service-management,service-control,logging-write,monitoring \
    --subnet kubernetes \
    --tags kubernetes-the-hard-way,controller
	done
for instance in controller-0 controller-1 controller-2; do  gcloud compute scp admin.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig ${instance}:~/ done


gcloud  compute --project=infra instances create RedditPuma \
   --zone=us-east1-b --machine-type=f1-micro --subnet=default --tags=puma-server \
   --image=reddit-base --image-project=infra \
   --boot-disk-size=10GB --boot-disk-type=pd-standard

gcloud auth application-default login
gcloud auth list
gcloud auth login
gcloud beta container clusters update standard-cluster-1 --zone=us-central1-a  --enable-network-policy
gcloud components update
gcloud compute instances create
gcloud compute instances list
gcloud compute --project=infra firewall-rules create default-puma-server --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:9292 --source-ranges=0.0.0.0/0 --target-tags=puma-server
gcloud compute --project=infra instances create puma-service --zone=us-east1-b --machine-type=f1-micro --subnet=default --tags=puma-server --image=reddit-base --image-project=infra-219416 --boot-disk-size=10GB --boot-disk-type=pd-standard
gcloud compute ssh controller-0
gcloud compute ssh controller-0 \
  --command "kubectl get nodes --kubeconfig admin.kubeconfig"
gcloud compute ssh worker-2
gcloud config
gcloud config get-value
gcloud config list
gcloud config set project Infra
gcloud config set project list
gcloud info
gcloud init
gcloud projects list


gem
gem install travis
gem list
gem update --system

git add .
git add . && git commit && git push -f --set-upstream origin docker-2
git add . && git commit --amend && git push -f --set-upstream origin docker-4
git add . && git commit -m "Commit 1"
git add . && git commit -m 'HW-9 Ansible-2'
git add .gitignore README.md terraform/main.tf terraform/variables.tf
git add .gitlab-ci.ymlgit commit -m 'add pipeline definition'git push gitlab gitlab-ci-1
git apply
git branch
git branch ansible-4
git branch terraform-2
git checkout 58be23971db1a871f9e14b04e3489a5fa4c91717
git checkout ansible-1
git checkout -b ansible-3 origin/ansible-3
git checkout bff762fb14ff73d84f13d9f2bfe910526d06ea55
git checkout branch2
git chekout master
git clone
git clone git@github.com:Otus-DevOps-2018-09/ozyab09_infra.git
git clone git@gitlab.com:server/server-deploy.git -key ~/.ssh/gitlab-com
git commit  -m 'Fixed link to Travis repository in Readme.md file'
git commit  -m 'Renamed directory `vpn` to `VPN`'
git commit -am "Add review feature"
git commit --ammend -m 'Updated Readme'
git commit --help
git coomit -m 'Firewall rules for tagged instanses'
git diff
git diff packer-base
git -f push -u --all
git fetch
git fetch origin
git log
git merge master
git merge --no-ff ansible-3
git plan
git pull
git pull gitlab
git pull gitlab gitlab-ci-1
git push  --set-upstream origin monitoring-1
git push -f
git push -f origin -u --all
git push -f --set-upstream origin ansible-1
git push gitlab gitlab-ci-1
git push gitlab2 gitlab-ci-2 --tags
git push --help
git push origin master
git push origin -u --all
git push --set-upstream origin ansible-1
git push -u -all
git rebase
git rebase 8dc460f60235fd3871bebc5c1e12bc662f579ce9
git rebase --abort
git rebase --continue
git rebase --edit-todo
git rebase -i HEAD~3
git remote add origin http://gitlab-gitlab/chromko/ui.git
git remote delete origin
git revert 7237d8498f3589faad4a57a50b4602d430bcbfd5
git rm         terraform/terraform.tfstate.backup
git rm ansible/roles/jdauphant.nginx/
git rm --cached docker/.env
git rm deploy.retry
git show
git status
git tag 2.4.10
git tag -a Homework-2
git tag -a Travis
git update-index --chmod=+x packer/config-scripts/create-reddit-vm.sh

go
go build
go --help
go help run
go version
godoc 
godoc fmt Println


hadolint
hadolint Dockerfile

helm
helm del --purge grafana
helm delete grafana
helm dep update
helm dep update ./reddit
helm dep update --debug
helm describe test-ui-1
helm fetch  stable/prometheus
helm fetch gitlab/gitlab-omnibus --version 0.1.37 --untar
helm fetch --untar stable/prometheus
helm init --service-account tiller
helm inspect gitlab-gitlab-runner-5df57b8848-7x8l7
helm inspect ui
helm install grafana stable/grafana --set "adminPassword=admin" \
  --set "service.type=NodePort" \
  --set "ingress.enabled=true" \
  --set "ingress.hosts={reddit-grafana}"
helm install --name gitlab . -f values.yaml
helm install reddit --name reddit-test
helm install ui --name ui-3
helm repo add gitlab https://charts.gitlab.io
helm search mongo
helm upgrade <release-name> ./reddit
helm upgrade --install grafana stable/grafana --set "server.adminPassword=admin" \
  --set "server.service.type=NodePort" \
  --set "server.ingress.enabled=true" \
  --set "server.ingress.hosts={reddit-grafana}"

helm upgrade staging --namespace staging ./reddit —install
helm upgrade ui-1 ui/


kubectl apply comment-deployment.yml
kubectl apply -f .
kubectl apply -f ./kubernetes/reddit/ -n dev
kubectl apply -f ./kubernetes/reddit/dev-namespace.yml
kubectl apply -f https://storage.googleapis.com/kubernetes-the-hard-way/coredns.yaml
kubectl apply -f kubernetes/reddit/tiller.yml
kubectl config current-context
kubectl config view
kubectl context 
kubectl context view
kubectl create secret generic kubernetes-the-hard-way \
  --from-literal="mykey=mydata"
kubectl create secret tls ui-ingress --key tls.key --cert tls.crt -n dev
kubectl delete deploy mongo -n dev
kubectl delete deploy ui -n dev
kubectl delete -f .
kubectl delete -f ui-ingress.yml -n dev
kubectl delete ingress ui -n dev
kubectl delete secret tls -n dev
kubectl delete secret tls ui-ingress --key tls.key --cert tls.crt -n dev
kubectl delete ui-deployment.yml
kubectl describe nodes
kubectl describe pod reddit-test-mongodb-6b6bc97c58-zmq8j
kubectl describe pod ui-1-ui-658b6fcc8d-km6n7
kubectl describe secret ui-ingress -n dev
kubectl describe service comment | grep Endpoints
kubectl describe storageclass standard -n dev
kubectl exec -it grafana-bdc977fd4-lxscw sh
kubectl exec -ti $POD_NAME -- nginx -v
kubectl exec -ti $POD_NAME -- nslookup kubernetes
kubectl exec -ti -n dev post-8ff9c4cb9-h4zpq ping comment
kubectl expose deployment nginx --port 80 --type NodePort
kubectl get deployment
kubectl get deployment -n default
kubectl get ingress -n default
kubectl get ingress -n dev
kubectl get nodes -o wide
kubectl get nodes
kubectl get persistentvolume -n dev
kubectl get po
kubectl get pod -n dev
kubectl get pods
kubectl get pods -l k8s-app=kube-dns -n kube-system
kubectl get pods -l run=busybox -o jsonpath
kubectl get pods -l run=busybox -o jsonpath="{.items[0].metadata.age}"
kubectl get pods -l run=busybox -o jsonpath="{.items[0].metadata.name}"
kubectl get pods -l run=busybox -o jsonpath="{.items[0].metadata.status}"
kubectl get pods -n dev
kubectl get pods -n kube-system --selector app=helm
kubectl get pods -o wide
kubectl get pods --selector component=mongo
kubectl get pods --selector component=uo
kubectl get service
kubectl get service -n dev --selector component=ui
kubectl get service -n nginx-ingress nginx
kubectl get services
kubectl get services -n dev
kubectl get svc
kubectl insect gitlab-gitlab-runner-5df57b8848-7x8l7
kubectl inspect
kubectl inspect pod gitlab-gitlab-runner-5df57b8848-7x8l7
kubectl log -f grafana-bdc977fd4-gpr5d
kubectl logs $POD_NAME
kubectl logs -f comment-559cc97f59-hnwsq
kubectl logs -f comment-559cc97f59-hnwsq -n dev
kubectl logs -f post-57788c57f6-427cj
kubectl logs grafana-bdc977fd4-gpr5d
kubectl logs reddit-test-ui-78664855d5-pvdpr
kubectl pod inspect gitlab-gitlab-runner-5df57b8848-7x8l7
kubectl port-forward $POD_NAME 8080:80
kubectl port-forward comment-757c84f994-5w47f 8080:9292
kubectl port-forward post-5c45f6d5c8-5dpx7 5000:5000
kubectl port-forward ui-5d69f5784f-85scd 9292:9292
kubectl run busybox --image=busybox:1.28 --command -- sleep 3600
kubectl run nginx --image=nginx
kubectl scale deployment --replicas 0 -n kube-system kube-dns-autoscaler
kubectl scale deployment --replicas 1 -n kube-system kube-dns-autoscaler
kubectl service
kubectl service delete
kubectl su-exec -it grafana-bdc977fd4-lxscw bash

minikube
minikube addons enable
minikube addons enable dashboard
minikube addons list
minikube addons listkubectl get all -n kube-system--selector k8s-app=kubernetes-dashboard
minikube start
minikube stop

molecule
molecule converge
molecule create
molecule destroy
molecule init
molecule init scenario --scenario-name default -r db -d vagrant
molecule list
molecule verify

openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj "/CN=35.201.126.86"
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj "/CN=35.201.67.17"

packer build  -var-file=variables.json immutable.json
packer build ./ubuntu16.json
packer build app.json
packer build packer/app.json
packer build ubuntu16.json
packer build --var-files=variables.json ubuntu16.json
packer buils ./ubuntu16.json
packer buils ubuntu16.json
packer validate  -var-file=variables.json immutable.json
packer validate  -var-file=variables.json.example immutable.json
packer validate app.json
packer validate packer/app.json
packer validate ubuntu16.json -var-file=variables.json
packer version
pbcopy < ~/.ssh/id_rsa.pub

pip
pip install apache-libcloud
pip install molecule
pip install --upgrade pip
pip -v
pip --version


ruby
ruby --version
rubygems --version

scp  mtproto/mtproto-proxy o

systemd unit
tar -xcf google-cloud-sdk-221.0.0-darwin-x86_64.tar.gz
tar -xf google-cloud-sdk-221.0.0-darwin-x86_64.tar.gz
tar -xvf terraform_0.11.10_darwin_amd64.zip

terarform plan
terrafom show
terraform allpy
terraform apply -auto-approve=false
terraform destroy
terraform destroy -auto-approve && terraform apply
terraform destroy --help
terraform fmt
terraform get
terraform import google_compute_firewall
terraform import google_compute_firewall.firewall_mongo
terraform import google_compute_firewall.firewall_ssh default-allow-ssh
terraform init
terraform init -backend=false
terraform validate -var-file=terraform.tfvars.example
terraform output
terraform output app_external_ip
terraform plan
terraform play
terraform refresh
terraform show
terraform show | grep assigned_nat_ip
terraform taint google_compute_instance.app
terraform update
terraform -v

travis encrypt "devops-team-otus:TOKEN#vyacheslav_egorov" --add notifications.slack.rooms --com
travis encrypt "devops-team-otus:TOKEN#vyacheslav_egorov" --add notifications.slack.rooms --pro -r Otus-DevOps-2018-09/ozyab_microservices

travis login --com
travis token

virtualenv
virtualenv pyenv
virtualenv --version
